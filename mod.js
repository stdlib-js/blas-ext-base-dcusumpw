// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r,t=Object.defineProperty,o=Object.prototype,n=o.toString,a=o.__defineGetter__,l=o.__defineSetter__,i=o.__lookupGetter__,u=o.__lookupSetter__;r=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var c,_,f,p;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((_="value"in t)&&(i.call(e,r)||u.call(e,r)?(c=e.__proto__,e.__proto__=o,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),f="get"in t,p="set"in t,_&&(f||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return f&&a&&a.call(e,r,t.get),p&&l&&l.call(e,r,t.set),e};var c=r;var _=Math.floor;function f(e,r,t,o,n,a,l,i){var u,c,p,b,y;if(e<=0)return a;if(u=n,c=i,e<=128){for(p=0,y=0;y<e;y++)p+=t[u],a[c]=r+p,u+=o,c+=l;return a}return f(b=_(e/2),r,t,o,u,a,l,c),f(e-b,a[c+=(b-1)*l],t,o,u+b*o,a,l,c+l),a}function p(e,r,t,o,n,a){return e<=0?n:f(e,r,t,o,o<0?(1-e)*o:0,n,a,a<0?(1-e)*a:0)}c(p,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:f});export{p as default,f as ndarray};
//# sourceMappingURL=mod.js.map
